### GENERAL ###

# Default is 2000
set -g history-limit 50000

# automatically renumber tmux windows
set -g renumber-windows on
# If rename something I want it to stick
set -g allow-rename off

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# allow using the mouse inside tmux
set -g mouse on

# No delay for escape key press
set -sg escape-time 0
# But cut me some slack for repated keys, might lower it later.
# set -g repeat-time 750

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

### BINDINGS ###

# remap prefix from 'C-b' to 'C-p'
unbind C-b

# # set-option -g prefix C-p
# # god this feels good. double tab, switch between windows
# bind-key C-p last-window
# # Allows us to use C-p p <command> to send commands to a TMUX session inside 
# # another TMUX session
# bind-key p send-prefix
# # bind-key C-p send-prefix

set-option -g prefix `
bind-key ` last-window

# set vi mode
set-option -g status-keys vi
# set-option -g mode-keys vi

#### copy mode : vim ####

# set vi mode for copy mode
set-option -g mode-keys vi

# Use v to trigger selection    
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Set new panes and windows to open in the directory of the current pane
bind c new-window -c "#{pane_current_path}"

# split panes using | and -
# I can't be bothered to press the shift for \ -> |
bind \\ split-window -h -c "#{pane_current_path}" 
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Vim style pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D 
bind -n C-k select-pane -U
bind -n C-l select-pane -R


# Add repeat flag to easily scan over windows by number
bind-key -r 0 select-window -t :=0
bind-key -r 1 select-window -t :=1
bind-key -r 2 select-window -t :=2
bind-key -r 3 select-window -t :=3
bind-key -r 4 select-window -t :=4
bind-key -r 5 select-window -t :=5
bind-key -r 6 select-window -t :=6
bind-key -r 7 select-window -t :=7
bind-key -r 8 select-window -t :=8
bind-key -r 9 select-window -t :=9

unbind -n Tab

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

### STATUS BAR ###

# status bar theme

set  -g default-terminal "xterm-256color"
set -ag terminal-overrides ",alacritty:RGB"

set -g status 'on'
set -g status-position 'bottom'
set -g status-bg 'colour235'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-right-length '100' 
set -g status-left '#[fg=colour232,bg=colour154] #S #[default]  '
set -g status-right '#[fg=colour0,bg=colour243] %a %d/%m #[fg=colour0,bold,bg=colour249] %R #[default] ' 

set -g message-style fg='colour222',bg='colour238'
set -g message-command-style fg='colour222',bg='colour238'

set -g pane-border-style fg='colour238'
set -g pane-active-border-style fg='colour154'

setw -g window-status-activity-style fg='colour154',bg='colour235',none
setw -g window-status-separator ''
setw -g window-status-style fg='colour250',bg='colour235',none
setw -g window-status-format '#[fg=colour74] #I #[default]#W#(pwd="#{pane_current_path}"; if [[ #W == zsh && $pwd != /home/lapo ]]; then echo /#[fg=colour212]${pwd####*/}; fi)#[fg=colour74]#F '
setw -g window-status-current-format '#[fg=colour222,bg=colour238] #I:#[fg=colour255,bg=colour238]#W#(pwd="#{pane_current_path}"; if [[ #W == zsh && $pwd != /home/lapo ]]; then echo /#[fg=colour212]${pwd####*/}; fi)#[fg=colour74]#F '
