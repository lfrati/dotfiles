# alias rm='echo "This is not the command you are looking for."; false'
alias vim='nvim'
alias vi='nvim'
alias open='xdg-open'
alias getsong="youtube-dl -x --output '%(title)s.%(ext)s' --audio-format mp3 -f bestaudio --add-metadata --no-playlist "
alias mkreport="~/miniconda3/envs/deep/bin/jupyter nbconvert --template=/home/lapo/dotfiles/report.tpl --to=html "
alias tasknext="while true; do clear && task next limit:5; sleep 3; done"
alias untar="tar -xvf"
alias untargz="tar -zxvf"
alias untarbz2="tar -xvjf"
alias tarlist="tar -tvf"
alias targzlist="tar -ztvf"
alias tarbz2list="tar -jtvf"

cd_with_fzf(){
  cd $HOME && cd "$(fd -t d | fzf --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)"
}
bindkey -s '^p' 'cd_with_fzf\n'

# Use lf to switch directories
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
# export OPENER="rifle"
# Using ranger instead
bindkey -s '^l' 'lfcd\n'
bindkey -s '^o' 'ranger\n'

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

prettyjson(){
  cat $1 | python -mjson.tool > pretty-$1
}

toteton(){

  src_dir=$PWD
  curr_dir=${PWD##*/}
  dst_dir="teton:proj/"

  if [[ $1 == up ]]; then
    echo Copy $src_dir to $dst_dir
    rsync -av --progress --delete --filter=':- .gitignore' $src_dir $dst_dir
  else
    echo DRYRUN: Copy $src_dir to $dst_dir
    rsync -av --dry-run --delete --filter=':- .gitignore' $src_dir $dst_dir
  fi

}

getbib(){
  # Give this script a .pdf and it will attempt
  # to return a proper .bib citation via doi.
  # Internet connection required.

  # Get the doi from metadata, if not possible, get
  # doi from pdftotext output, if not possible, try regex
  # adapted from https://www.crossref.org/blog/dois-and-matching-regular-expressions/
  # then if nothing worked surrender.
  doi=$(pdfinfo $1 | grep -o "doi:.*") ||
  doi=$(pdftotext $1 - | grep -o "doi.*" -m 1) ||
  doi=$(pdftotext $1 - | egrep -o "10\.[[:digit:]]{4,9}/[-\.;()/:a-zA-Z0-9]+" -m 1)
  echo "No DOI found."

  # Check crossref.org for the bib citation.
  curl -s "http://api.crossref.org/works/$doi/transform/application/x-bibtex" -w "\n" | sed -e "/^[^\(\t\|@\|}\)]/d"
}

# fromteton(){

#   dst_dir="teton:proj/"

#   if [[ $1 == down ]]; then
#     echo Copy $src_dir to $dst_dir
#     rsync -av --progress --delete --exclude '*.hebb' --exclude '*.model' $src_dir $dst_dir
#   else
#     echo DRYRUN: Copy $src_dir to $dst_dir
#     rsync -av --dry-run --delete --exclude '*.hebb' --exclude '*.model' $src_dir $dst_dir
#   fi

# }
